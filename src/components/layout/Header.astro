---
import { siteConfig, menuLinks } from "@/site-config";

import ThemeToggle from "../ThemeToggle.astro";
import { Icon } from "astro-icon/components";

import { Image } from "astro:assets";
import sharkImg from "/public/shark.gif";

const url = new URL(Astro.request.url);
---

<header class="group relative mb-28 flex items-center sm:ps-[6rem]" id="main-header">
	<div class="flex w-full sm:flex-col">
		<a
			aria-current={url.pathname === "/" ? "page" : false}
			class="inline-flex items-center grayscale hover:filter-none sm:relative sm:inline-block"
			href="/">
			<Image
				class="rendering-pixelated me-3 h-10 w-10 sm:absolute sm:start-[-6rem] sm:me-0 sm:h-[4.5rem] sm:w-[4.5rem]"
				alt="logo"
				fetchpriority="high"
				loading="eager"
				src={sharkImg}
			/>
			<div id="dog-cache"></div>
			<span class="text-xl font-bold sm:text-2xl">{siteConfig.title}</span>
		</a>
		<nav
			aria-label="Main menu"
			class="absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md bg-bgColor/[.85] py-4 text-accent shadow backdrop-blur group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:-ms-4 sm:mt-1 sm:flex sm:flex-row sm:items-center sm:divide-x sm:divide-dashed sm:divide-accent sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none"
			id="navigation-menu">
			{
				menuLinks.map((link) => (
					<a
						aria-current={url.pathname === link.path ? "page" : false}
						class="px-4 py-4 sm:py-0 sm:hover:underline"
						data-astro-prefetch
						href={link.path}
						target={link.blank == true ? "_blank" : ""}>
						{link.title}
					</a>
				))
			}
		</nav>
	</div>
	<ThemeToggle />
	<mobile-button>
		<button
			aria-expanded="false"
			aria-haspopup="menu"
			aria-label="Open main menu"
			class="group relative ms-4 h-7 w-7 sm:invisible sm:hidden"
			id="toggle-navigation-menu"
			type="button">
			<Icon
				aria-hidden="true"
				class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
				focusable="false"
				name="ri:menu-line"
				id="line-svg"
			/>
			<Icon
				aria-hidden="true"
				class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 text-accent opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
				focusable="false"
				name="ri:close-large-line"
				id="cross-svg"
			/>
		</button>
	</mobile-button>
</header>

<script>
	import { toggleClass } from "@/utils";

	class MobileNavBtn extends HTMLElement {
		private headerEl: HTMLElement;
		private menuOpen: boolean;
		private mobileButtonEl: HTMLButtonElement;

		toggleMobileMenu = () => {
			toggleClass(this.headerEl, "menu-open");
			this.menuOpen = !this.menuOpen;
			this.mobileButtonEl.setAttribute("aria-expanded", this.menuOpen.toString());
		};

		constructor() {
			super();
			this.headerEl = document.getElementById("main-header")!;
			this.mobileButtonEl = this.querySelector("button") as HTMLButtonElement;
			this.menuOpen = false;

			this.mobileButtonEl.addEventListener("click", this.toggleMobileMenu);
		}
	}

	customElements.define("mobile-button", MobileNavBtn);
</script>
